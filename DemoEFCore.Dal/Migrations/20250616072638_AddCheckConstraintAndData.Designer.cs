// <auto-generated />
using System;
using DemoEFCore.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemoEFCore.Dal.Migrations
{
    [DbContext(typeof(ProductManagerDbContext))]
    [Migration("20250616072638_AddCheckConstraintAndData")]
    partial class AddCheckConstraintAndData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DemoEFCore.Dal.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Category", null, t =>
                        {
                            t.HasCheckConstraint("CK_Category_Name", "LEN(TRIM(Name)) > 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Frais"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Condiment"
                        });
                });

            modelBuilder.Entity("DemoEFCore.Dal.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(128)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Product", null, t =>
                        {
                            t.HasCheckConstraint("CK_Product_Name", "LEN(TRIM(Name)) > 0");

                            t.HasCheckConstraint("CK_Product_Price", "Price > 0");
                        });

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Salade du jardin",
                            Name = "Salade",
                            Price = 3.9900000000000002
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            Description = "Häagen-Dazs",
                            Name = "Glace",
                            Price = 7.9900000000000002
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
